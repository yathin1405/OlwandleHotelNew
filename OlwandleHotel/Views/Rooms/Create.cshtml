@model OlwandleHotel.Models.Rooms

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/newlwayout.cshtml";
}
<style>
    body {
        background-image: url("../../Content/img/50-Beautiful-and-Minimalist-Presentation-Backgrounds-041.jpg");
    }
</style>

<h2>Create</h2>
<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm(actionName: "Create", controllerName: "Rooms", routeValues: null, method: FormMethod.Post, htmlAttributes: new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Rooms</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @*<div class="form-group">
                        @Html.LabelFor(model => model.RoomNo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RoomNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RoomNo, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.RoomTypeId, "RoomType", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("RoomTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RoomTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.FloorNum, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FloorNum, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FloorNum, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    <div class="col-md-10">
                        <tr>
                            <th>@Html.LabelFor(model => model.Picture)</th>
                            <td>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-file-picture-o"></i>
                                    </div>
                                    <input type="file" name="img_upload" accept=".jpeg,.jpg,.png" onchange="readURL(this);" class="form-control" required="required" />
                                </div>
                            </td>
                        </tr>
                        @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                        @Html.LabelFor(model => model.NumOfRooms, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NumOfRooms, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumOfRooms, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                        @Html.LabelFor(model => model.RoomStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RoomStatus, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RoomStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                        @Html.LabelFor(model => model.NoBooked, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NoBooked, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NoBooked, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                        @Html.LabelFor(model => model.TotRev, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TotRev, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TotRev, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.numguests, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.numguests, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numguests, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Numbeds, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Numbeds, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Numbeds, "", new { @class = "text-danger" })
                    </div>
                </div>

                <tr>
                    <td>
                        <a class="btn btn-default" href="@Url.Action("Index","Rooms")">
                            <i class="fa fa-angle-left"></i>
                            Back to List
                        </a>
                    </td>
                    <td class="pull-right">
                        <input type="submit" value="Add Room" class="btn btn-primary" />
                    </td>
                </tr>
            </div>
        }
    </div>
    <div class="col-md-6">
        <div class="col-md-6">
            <img id="image_preview" src="#" alt="" />
        </div>

        <script type="text/javascript">
            //image preview
            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#image_preview')
                            .attr('src', e.target.result)
                            .width(400)
                            .height(400);

                    };

                    reader.readAsDataURL(input.files[0]);
                }
            }
        </script>
    </div>
</div>
